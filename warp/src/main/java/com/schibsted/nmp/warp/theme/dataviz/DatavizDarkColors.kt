package com.schibsted.nmp.warp.theme.dataviz
import androidx.compose.ui.graphics.Color
import com.schibsted.nmp.warp.theme.WarpDatavizBackgroundColors
import com.schibsted.nmp.warp.theme.WarpDatavizBorderColors
import com.schibsted.nmp.warp.theme.WarpDatavizChartColors
import com.schibsted.nmp.warp.theme.WarpDatavizColors
import com.schibsted.nmp.warp.theme.WarpDatavizIconColors
import com.schibsted.nmp.warp.theme.WarpDatavizLineColors
import com.schibsted.nmp.warp.theme.WarpDatavizTextColors

// Generated on Thu, 20 Feb 2025 14:52:44 GMT by https://github.com/warp-ds/tokens

object DatavizDarkColors : WarpDatavizColors {
    override val chart: WarpDatavizChartColors = DatavizDarkChartColors
    override val background: WarpDatavizBackgroundColors = DatavizDarkBackgroundColors
    override val line: WarpDatavizLineColors = DatavizDarkLineColors
    override val border: WarpDatavizBorderColors = DatavizDarkBorderColors
    override val text: WarpDatavizTextColors = DatavizDarkTextColors
    override val icon: WarpDatavizIconColors = DatavizDarkIconColors
}

object DatavizDarkChartColors : WarpDatavizChartColors {
    override val lineDefault = Color(0xFFafafb8)
    override val lineSubtle = Color(0xFF5c5c66)
    override val backgroundDefault = Color(0xFF1b1b1f)
    override val textDefault = Color(0xFFffffff)
    override val textSubtle = Color(0xFFafafb8)
}

object DatavizDarkBackgroundColors : WarpDatavizBackgroundColors {
    override val primary = Color(0xFF47a6f8)
    override val primaryHighlight = Color(0xFF93caff)
    override val secondary = Color(0xFFa1a1a1)
    override val secondaryHighlight = Color(0xFFc3c6c9)
    override val category1 = Color(0xFFc6bffc)
    override val category1Highlight = Color(0xFFe9e8fb)
    override val category2 = Color(0xFFfab842)
    override val category2Highlight = Color(0xFFffe7c6)
    override val category3 = Color(0xFFf071d1)
    override val category3Highlight = Color(0xFFfaace4)
    override val category4 = Color(0xFF18b592)
    override val category4Highlight = Color(0xFF68d7bb)
    override val category5 = Color(0xFFf38167)
    override val category5Highlight = Color(0xFFf9b4a3)
    override val category6 = Color(0xFF3ad7e0)
    override val category6Highlight = Color(0xFFb5f5fd)
    override val category7 = Color(0xFF47a6f8)
    override val category7Highlight = Color(0xFF93caff)
    override val category8 = Color(0xFFd6d9db)
    override val category8Highlight = Color(0xFFffffff)
    override val positive = Color(0xFF3ac8a5)
    override val positiveHighlight = Color(0xFF92e9d4)
    override val warning = Color(0xFFfab842)
    override val warningHighlight = Color(0xFFffe7c6)
    override val negative = Color(0xFFf27c90)
    override val negativeHighlight = Color(0xFFffb0ba)
    override val neutral = Color(0xFFc3c6c9)
    override val neutralHighlight = Color(0xFFe9eaea)
    override val primarySubtle = Color(0xFF165887)
    override val primarySubtleHighlight = Color(0xFF007ac8)
    override val secondarySubtle = Color(0xFF535659)
    override val secondarySubtleHighlight = Color(0xFF73767c)
    override val category1Subtle = Color(0xFF5834c6)
    override val category1SubtleHighlight = Color(0xFF795af4)
    override val category2Subtle = Color(0xFF774a13)
    override val category2SubtleHighlight = Color(0xFFa26a00)
    override val category3Subtle = Color(0xFF92217a)
    override val category3SubtleHighlight = Color(0xFFce30a7)
    override val category4Subtle = Color(0xFF1a6047)
    override val category4SubtleHighlight = Color(0xFF00865f)
    override val category5Subtle = Color(0xFF9a2c11)
    override val category5SubtleHighlight = Color(0xFFd63e1a)
    override val category6Subtle = Color(0xFF1e5d69)
    override val category6SubtleHighlight = Color(0xFF19818f)
    override val category7Subtle = Color(0xFF165887)
    override val category7SubtleHighlight = Color(0xFF007ac8)
    override val category8Subtle = Color(0xFF535659)
    override val category8SubtleHighlight = Color(0xFF73767c)
    override val positiveSubtle = Color(0xFF1a6047)
    override val positiveSubtleHighlight = Color(0xFF00865f)
    override val warningSubtle = Color(0xFF774a13)
    override val warningSubtleHighlight = Color(0xFFa26a00)
    override val negativeSubtle = Color(0xFF9e1a33)
    override val negativeSubtleHighlight = Color(0xFFe22344)
    override val neutralSubtle = Color(0xFF535659)
    override val neutralSubtleHighlight = Color(0xFF73767c)
}

object DatavizDarkLineColors : WarpDatavizLineColors {
    override val primary = Color(0xFF6eb9fe)
    override val primaryHighlight = Color(0xFFb4defd)
    override val secondary = Color(0xFFa1a1a1)
    override val secondaryHighlight = Color(0xFFc3c6c9)
    override val category1 = Color(0xFFc6bffc)
    override val category1Highlight = Color(0xFFe9e8fb)
    override val category2 = Color(0xFFfab842)
    override val category2Highlight = Color(0xFFffe7c6)
    override val category3 = Color(0xFFf071d1)
    override val category3Highlight = Color(0xFFfaace4)
    override val category4 = Color(0xFF18b592)
    override val category4Highlight = Color(0xFF68d7bb)
    override val category5 = Color(0xFFf38167)
    override val category5Highlight = Color(0xFFf9b4a3)
    override val category6 = Color(0xFF3ad7e0)
    override val category6Highlight = Color(0xFFb5f5fd)
    override val category7 = Color(0xFF47a6f8)
    override val category7Highlight = Color(0xFF93caff)
    override val category8 = Color(0xFFe9eaea)
    override val category8Highlight = Color(0xFFffffff)
    override val positive = Color(0xFF3ac8a5)
    override val positiveHighlight = Color(0xFF92e9d4)
    override val warning = Color(0xFFfab842)
    override val warningHighlight = Color(0xFFffe7c6)
    override val negative = Color(0xFFf27c90)
    override val negativeHighlight = Color(0xFFffb0ba)
    override val neutral = Color(0xFFc3c6c9)
    override val neutralHighlight = Color(0xFFe9eaea)
}

internal object DatavizDarkBorderColors : WarpDatavizBorderColors {
    override val primary = Color(0xFF47a6f8)
    override val primaryHighlight = Color(0xFF93caff)
    override val secondary = Color(0xFFa1a1a1)
    override val secondaryHighlight = Color(0xFFc3c6c9)
    override val category1 = Color(0xFFc6bffc)
    override val category1Highlight = Color(0xFFe9e8fb)
    override val category2 = Color(0xFFfab842)
    override val category2Highlight = Color(0xFFffe7c6)
    override val category3 = Color(0xFFf071d1)
    override val category3Highlight = Color(0xFFfaace4)
    override val category4 = Color(0xFF18b592)
    override val category4Highlight = Color(0xFF68d7bb)
    override val category5 = Color(0xFFf38167)
    override val category5Highlight = Color(0xFFf9b4a3)
    override val category6 = Color(0xFF3ad7e0)
    override val category6Highlight = Color(0xFFb5f5fd)
    override val category7 = Color(0xFF47a6f8)
    override val category7Highlight = Color(0xFF93caff)
    override val category8 = Color(0xFFd6d9db)
    override val category8Highlight = Color(0xFFffffff)
    override val positive = Color(0xFF3ac8a5)
    override val positiveHighlight = Color(0xFF92e9d4)
    override val warning = Color(0xFFfab842)
    override val warningHighlight = Color(0xFFffe7c6)
    override val negative = Color(0xFFf27c90)
    override val negativeHighlight = Color(0xFFffb0ba)
    override val neutral = Color(0xFFc3c6c9)
    override val neutralHighlight = Color(0xFFe9eaea)
}

internal object DatavizDarkIconColors : WarpDatavizIconColors {
    override val primary = Color(0xFF93caff)
    override val primaryHighlight = Color(0xFFd6edff)
    override val secondary = Color(0xFFc3c6c9)
    override val secondaryHighlight = Color(0xFFe9eaea)
    override val category1 = Color(0xFFc6bffc)
    override val category1Highlight = Color(0xFFe9e8fb)
    override val category2 = Color(0xFFfab842)
    override val category2Highlight = Color(0xFFffe7c6)
    override val category3 = Color(0xFFfaace4)
    override val category3Highlight = Color(0xFFf9e4f3)
    override val category4 = Color(0xFF68d7bb)
    override val category4Highlight = Color(0xFFbef6e7)
    override val category5 = Color(0xFFf9b4a3)
    override val category5Highlight = Color(0xFFffe4de)
    override val category6 = Color(0xFF3ad7e0)
    override val category6Highlight = Color(0xFFb5f5fd)
    override val category7 = Color(0xFF93caff)
    override val category7Highlight = Color(0xFFd6edff)
    override val category8 = Color(0xFFc3c6c9)
    override val category8Highlight = Color(0xFFe9eaea)
    override val positive = Color(0xFF68d7bb)
    override val positiveHighlight = Color(0xFFbef6e7)
    override val warning = Color(0xFFfab842)
    override val warningHighlight = Color(0xFFffe7c6)
    override val negative = Color(0xFFffb0ba)
    override val negativeHighlight = Color(0xFFffe3e9)
    override val neutral = Color(0xFFc3c6c9)
    override val neutralHighlight = Color(0xFFe9eaea)
}

internal object DatavizDarkTextColors : WarpDatavizTextColors {
    override val primary = Color(0xFF93caff)
    override val primaryHighlight = Color(0xFFd6edff)
    override val secondary = Color(0xFFc3c6c9)
    override val secondaryHighlight = Color(0xFFe9eaea)
    override val category1 = Color(0xFFc6bffc)
    override val category1Highlight = Color(0xFFe9e8fb)
    override val category2 = Color(0xFFfab842)
    override val category2Highlight = Color(0xFFffe7c6)
    override val category3 = Color(0xFFfaace4)
    override val category3Highlight = Color(0xFFf9e4f3)
    override val category4 = Color(0xFF68d7bb)
    override val category4Highlight = Color(0xFFbef6e7)
    override val category5 = Color(0xFFf9b4a3)
    override val category5Highlight = Color(0xFFffe4de)
    override val category6 = Color(0xFF3ad7e0)
    override val category6Highlight = Color(0xFFb5f5fd)
    override val category7 = Color(0xFF93caff)
    override val category7Highlight = Color(0xFFd6edff)
    override val category8 = Color(0xFFc3c6c9)
    override val category8Highlight = Color(0xFFe9eaea)
    override val positive = Color(0xFF68d7bb)
    override val positiveHighlight = Color(0xFFbef6e7)
    override val warning = Color(0xFFfab842)
    override val warningHighlight = Color(0xFFffe7c6)
    override val negative = Color(0xFFffb0ba)
    override val negativeHighlight = Color(0xFFffe3e9)
    override val neutral = Color(0xFFc3c6c9)
    override val neutralHighlight = Color(0xFFe9eaea)
}
