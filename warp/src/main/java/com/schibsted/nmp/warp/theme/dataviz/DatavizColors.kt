package com.schibsted.nmp.warp.theme.dataviz
import androidx.compose.ui.graphics.Color
import com.schibsted.nmp.warp.theme.WarpDatavizBackgroundColors
import com.schibsted.nmp.warp.theme.WarpDatavizBorderColors
import com.schibsted.nmp.warp.theme.WarpDatavizChartColors
import com.schibsted.nmp.warp.theme.WarpDatavizColors
import com.schibsted.nmp.warp.theme.WarpDatavizIconColors
import com.schibsted.nmp.warp.theme.WarpDatavizLineColors
import com.schibsted.nmp.warp.theme.WarpDatavizTextColors

// Generated on Thu, 20 Feb 2025 14:52:44 GMT by https://github.com/warp-ds/tokens

object DatavizColors : WarpDatavizColors {
    override val chart: WarpDatavizChartColors = DatavizChartColors
    override val background: WarpDatavizBackgroundColors = DatavizBackgroundColors
    override val line: WarpDatavizLineColors = DatavizLineColors
    override val border: WarpDatavizBorderColors = DatavizBorderColors
    override val text: WarpDatavizTextColors = DatavizTextColors
    override val icon: WarpDatavizIconColors = DatavizIconColors
}

object DatavizChartColors : WarpDatavizChartColors {
    override val lineDefault = Color(0xFF84848f)
    override val lineSubtle = Color(0xFFcacad1)
    override val backgroundDefault = Color(0xFFffffff)
    override val textDefault = Color(0xFF1b1b1f)
    override val textSubtle = Color(0xFF5c5c66)
}

object DatavizBackgroundColors : WarpDatavizBackgroundColors {
    override val primary = Color(0xFF1087de)
    override val primaryHighlight = Color(0xFF0e6cac)
    override val secondary = Color(0xFF919499)
    override val secondaryHighlight = Color(0xFF73767c)
    override val category1 = Color(0xFF795af4)
    override val category1Highlight = Color(0xFF5834c6)
    override val category2 = Color(0xFFc88800)
    override val category2Highlight = Color(0xFFa26a00)
    override val category3 = Color(0xFFeb5ec7)
    override val category3Highlight = Color(0xFFce30a7)
    override val category4 = Color(0xFF00a881)
    override val category4Highlight = Color(0xFF00865f)
    override val category5 = Color(0xFFe84c23)
    override val category5Highlight = Color(0xFFc42c00)
    override val category6 = Color(0xFF19818f)
    override val category6Highlight = Color(0xFF1e5d69)
    override val category7 = Color(0xFF2b97ef)
    override val category7Highlight = Color(0xFF007ac8)
    override val category8 = Color(0xFF919499)
    override val category8Highlight = Color(0xFF73767c)
    override val positive = Color(0xFF00a881)
    override val positiveHighlight = Color(0xFF00865f)
    override val warning = Color(0xFFc88800)
    override val warningHighlight = Color(0xFFa26a00)
    override val negative = Color(0xFFf2334e)
    override val negativeHighlight = Color(0xFFc81f3e)
    override val neutral = Color(0xFF81858c)
    override val neutralHighlight = Color(0xFF65686d)
    override val primarySubtle = Color(0xFFb4defd)
    override val primarySubtleHighlight = Color(0xFF6eb9fe)
    override val secondarySubtle = Color(0xFFd6d9db)
    override val secondarySubtleHighlight = Color(0xFFb4b4b4)
    override val category1Subtle = Color(0xFFc6bffc)
    override val category1SubtleHighlight = Color(0xFFa396f0)
    override val category2Subtle = Color(0xFFfdd28c)
    override val category2SubtleHighlight = Color(0xFFeba51b)
    override val category3Subtle = Color(0xFFfdcbee)
    override val category3SubtleHighlight = Color(0xFFf98edc)
    override val category4Subtle = Color(0xFF92e9d4)
    override val category4SubtleHighlight = Color(0xFF3ac8a5)
    override val category5Subtle = Color(0xFFf9b4a3)
    override val category5SubtleHighlight = Color(0xFFf38167)
    override val category6Subtle = Color(0xFF3ad7e0)
    override val category6SubtleHighlight = Color(0xFF00b1c1)
    override val category7Subtle = Color(0xFFb4defd)
    override val category7SubtleHighlight = Color(0xFF6eb9fe)
    override val category8Subtle = Color(0xFFc3c6c9)
    override val category8SubtleHighlight = Color(0xFFa1a1a1)
    override val positiveSubtle = Color(0xFF92e9d4)
    override val positiveSubtleHighlight = Color(0xFF3ac8a5)
    override val warningSubtle = Color(0xFFfdd28c)
    override val warningSubtleHighlight = Color(0xFFeba51b)
    override val negativeSubtle = Color(0xFFffb0ba)
    override val negativeSubtleHighlight = Color(0xFFf27c90)
    override val neutralSubtle = Color(0xFFc3c6c9)
    override val neutralSubtleHighlight = Color(0xFFa1a1a1)
}

object DatavizLineColors : WarpDatavizLineColors {
    override val primary = Color(0xFF1087de)
    override val primaryHighlight = Color(0xFF0e6cac)
    override val secondary = Color(0xFF919499)
    override val secondaryHighlight = Color(0xFF73767c)
    override val category1 = Color(0xFF795af4)
    override val category1Highlight = Color(0xFF5834c6)
    override val category2 = Color(0xFFc88800)
    override val category2Highlight = Color(0xFFa26a00)
    override val category3 = Color(0xFFeb5ec7)
    override val category3Highlight = Color(0xFFce30a7)
    override val category4 = Color(0xFF00a881)
    override val category4Highlight = Color(0xFF00865f)
    override val category5 = Color(0xFFd63e1a)
    override val category5Highlight = Color(0xFF9a2c11)
    override val category6 = Color(0xFF23707c)
    override val category6Highlight = Color(0xFF224950)
    override val category7 = Color(0xFF2b97ef)
    override val category7Highlight = Color(0xFF007ac8)
    override val category8 = Color(0xFF434445)
    override val category8Highlight = Color(0xFF65686d)
    override val positive = Color(0xFF00a881)
    override val positiveHighlight = Color(0xFF00865f)
    override val warning = Color(0xFFc88800)
    override val warningHighlight = Color(0xFFa26a00)
    override val negative = Color(0xFFf2334e)
    override val negativeHighlight = Color(0xFFc81f3e)
    override val neutral = Color(0xFF81858c)
    override val neutralHighlight = Color(0xFF65686d)
}

internal object DatavizBorderColors : WarpDatavizBorderColors {
    override val primary = Color(0xFF1087de)
    override val primaryHighlight = Color(0xFF0e6cac)
    override val secondary = Color(0xFF919499)
    override val secondaryHighlight = Color(0xFF73767c)
    override val category1 = Color(0xFF795af4)
    override val category1Highlight = Color(0xFF5834c6)
    override val category2 = Color(0xFFc88800)
    override val category2Highlight = Color(0xFFa26a00)
    override val category3 = Color(0xFFeb5ec7)
    override val category3Highlight = Color(0xFFce30a7)
    override val category4 = Color(0xFF00a881)
    override val category4Highlight = Color(0xFF00865f)
    override val category5 = Color(0xFFe84c23)
    override val category5Highlight = Color(0xFFc42c00)
    override val category6 = Color(0xFF19818f)
    override val category6Highlight = Color(0xFF1e5d69)
    override val category7 = Color(0xFF2b97ef)
    override val category7Highlight = Color(0xFF007ac8)
    override val category8 = Color(0xFF919499)
    override val category8Highlight = Color(0xFF73767c)
    override val positive = Color(0xFF00a881)
    override val positiveHighlight = Color(0xFF00865f)
    override val warning = Color(0xFFc88800)
    override val warningHighlight = Color(0xFFa26a00)
    override val negative = Color(0xFFf2334e)
    override val negativeHighlight = Color(0xFFc81f3e)
    override val neutral = Color(0xFF81858c)
    override val neutralHighlight = Color(0xFF65686d)
}

internal object DatavizIconColors : WarpDatavizIconColors {
    override val primary = Color(0xFF007ac8)
    override val primaryHighlight = Color(0xFF165887)
    override val secondary = Color(0xFF73767c)
    override val secondaryHighlight = Color(0xFF535659)
    override val category1 = Color(0xFF795af4)
    override val category1Highlight = Color(0xFF5834c6)
    override val category2 = Color(0xFFa26a00)
    override val category2Highlight = Color(0xFF774a13)
    override val category3 = Color(0xFFce30a7)
    override val category3Highlight = Color(0xFF92217a)
    override val category4 = Color(0xFF00865f)
    override val category4Highlight = Color(0xFF1a6047)
    override val category5 = Color(0xFFd63e1a)
    override val category5Highlight = Color(0xFF9a2c11)
    override val category6 = Color(0xFF19818f)
    override val category6Highlight = Color(0xFF1e5d69)
    override val category7 = Color(0xFF007ac8)
    override val category7Highlight = Color(0xFF165887)
    override val category8 = Color(0xFF73767c)
    override val category8Highlight = Color(0xFF535659)
    override val positive = Color(0xFF00865f)
    override val positiveHighlight = Color(0xFF1a6047)
    override val warning = Color(0xFFa26a00)
    override val warningHighlight = Color(0xFF774a13)
    override val negative = Color(0xFFe22344)
    override val negativeHighlight = Color(0xFF9e1a33)
    override val neutral = Color(0xFF73767c)
    override val neutralHighlight = Color(0xFF535659)
}

internal object DatavizTextColors : WarpDatavizTextColors {
    override val primary = Color(0xFF007ac8)
    override val primaryHighlight = Color(0xFF165887)
    override val secondary = Color(0xFF73767c)
    override val secondaryHighlight = Color(0xFF535659)
    override val category1 = Color(0xFF795af4)
    override val category1Highlight = Color(0xFF5834c6)
    override val category2 = Color(0xFFa26a00)
    override val category2Highlight = Color(0xFF774a13)
    override val category3 = Color(0xFFce30a7)
    override val category3Highlight = Color(0xFF92217a)
    override val category4 = Color(0xFF00865f)
    override val category4Highlight = Color(0xFF1a6047)
    override val category5 = Color(0xFFd63e1a)
    override val category5Highlight = Color(0xFF9a2c11)
    override val category6 = Color(0xFF19818f)
    override val category6Highlight = Color(0xFF1e5d69)
    override val category7 = Color(0xFF007ac8)
    override val category7Highlight = Color(0xFF165887)
    override val category8 = Color(0xFF73767c)
    override val category8Highlight = Color(0xFF535659)
    override val positive = Color(0xFF00865f)
    override val positiveHighlight = Color(0xFF1a6047)
    override val warning = Color(0xFFa26a00)
    override val warningHighlight = Color(0xFF774a13)
    override val negative = Color(0xFFe22344)
    override val negativeHighlight = Color(0xFF9e1a33)
    override val neutral = Color(0xFF73767c)
    override val neutralHighlight = Color(0xFF535659)
}


internal val Blue50 = Color(0xFFd6edff)
internal val Blue100 = Color(0xFFb4defd)
internal val Blue200 = Color(0xFF93caff)
internal val Blue300 = Color(0xFF6eb9fe)
internal val Blue400 = Color(0xFF47a6f8)
internal val Blue500 = Color(0xFF2b97ef)
internal val Blue600 = Color(0xFF1087de)
internal val Blue650 = Color(0xFF007ac8)
internal val Blue700 = Color(0xFF0e6cac)
internal val Blue800 = Color(0xFF165887)
internal val Blue900 = Color(0xFF104568)
internal val Indigo50 = Color(0xFFe9e8fb)
internal val Indigo100 = Color(0xFFd9d5ff)
internal val Indigo200 = Color(0xFFc6bffc)
internal val Indigo300 = Color(0xFFb4a9fb)
internal val Indigo400 = Color(0xFFa396f0)
internal val Indigo500 = Color(0xFF9687ec)
internal val Indigo600 = Color(0xFF856ff5)
internal val Indigo650 = Color(0xFF795af4)
internal val Indigo700 = Color(0xFF6e43ef)
internal val Indigo800 = Color(0xFF5834c6)
internal val Indigo900 = Color(0xFF43289c)
internal val Red50 = Color(0xFFffe3e9)
internal val Red100 = Color(0xFFffcdd6)
internal val Red200 = Color(0xFFffb0ba)
internal val Red300 = Color(0xFFf997a5)
internal val Red400 = Color(0xFFf27c90)
internal val Red500 = Color(0xFFf46176)
internal val Red600 = Color(0xFFf2334e)
internal val Red650 = Color(0xFFe22344)
internal val Red700 = Color(0xFFc81f3e)
internal val Red800 = Color(0xFF9e1a33)
internal val Red900 = Color(0xFF7a1429)
internal val Orange50 = Color(0xFFffe4de)
internal val Orange100 = Color(0xFFfdcec2)
internal val Orange200 = Color(0xFFf9b4a3)
internal val Orange300 = Color(0xFFfa9a84)
internal val Orange400 = Color(0xFFf38167)
internal val Orange500 = Color(0xFFea6d52)
internal val Orange600 = Color(0xFFe84c23)
internal val Orange650 = Color(0xFFd63e1a)
internal val Orange700 = Color(0xFFc42c00)
internal val Orange800 = Color(0xFF9a2c11)
internal val Orange900 = Color(0xFF6b2d16)
internal val Yellow50 = Color(0xFFffe7c6)
internal val Yellow100 = Color(0xFFfdd28c)
internal val Yellow200 = Color(0xFFfab842)
internal val Yellow300 = Color(0xFFeba51b)
internal val Yellow400 = Color(0xFFd69500)
internal val Yellow500 = Color(0xFFc88800)
internal val Yellow600 = Color(0xFFb97500)
internal val Yellow650 = Color(0xFFa26a00)
internal val Yellow700 = Color(0xFF905c09)
internal val Yellow800 = Color(0xFF774a13)
internal val Yellow900 = Color(0xFF5a3a20)
internal val Green50 = Color(0xFFbef6e7)
internal val Green100 = Color(0xFF92e9d4)
internal val Green200 = Color(0xFF68d7bb)
internal val Green300 = Color(0xFF3ac8a5)
internal val Green400 = Color(0xFF18b592)
internal val Green500 = Color(0xFF00a881)
internal val Green600 = Color(0xFF00966a)
internal val Green650 = Color(0xFF00865f)
internal val Green700 = Color(0xFF0b7554)
internal val Green800 = Color(0xFF1a6047)
internal val Green900 = Color(0xFF1d4938)
internal val Teal50 = Color(0xFFb5f5fd)
internal val Teal100 = Color(0xFF6feaf1)
internal val Teal200 = Color(0xFF3ad7e0)
internal val Teal300 = Color(0xFF1dc4d5)
internal val Teal400 = Color(0xFF00b1c1)
internal val Teal500 = Color(0xFF00a3b4)
internal val Teal600 = Color(0xFF2c8f9c)
internal val Teal650 = Color(0xFF19818f)
internal val Teal700 = Color(0xFF23707c)
internal val Teal800 = Color(0xFF1e5d69)
internal val Teal900 = Color(0xFF224950)
internal val Pink50 = Color(0xFFf9e4f3)
internal val Pink100 = Color(0xFFfdcbee)
internal val Pink200 = Color(0xFFfaace4)
internal val Pink300 = Color(0xFFf98edc)
internal val Pink400 = Color(0xFFf071d1)
internal val Pink500 = Color(0xFFeb5ec7)
internal val Pink600 = Color(0xFFdb42b2)
internal val Pink650 = Color(0xFFce30a7)
internal val Pink700 = Color(0xFFb82096)
internal val Pink800 = Color(0xFF92217a)
internal val Pink900 = Color(0xFF6e1f5f)
internal val Gray50 = Color(0xFFe9eaea)
internal val Gray100 = Color(0xFFd6d9db)
internal val Gray200 = Color(0xFFc3c6c9)
internal val Gray300 = Color(0xFFb4b4b4)
internal val Gray400 = Color(0xFFa1a1a1)
internal val Gray500 = Color(0xFF919499)
internal val Gray600 = Color(0xFF81858c)
internal val Gray650 = Color(0xFF73767c)
internal val Gray700 = Color(0xFF65686d)
internal val Gray800 = Color(0xFF535659)
internal val Gray900 = Color(0xFF434445)
internal val White = Color(0xFFffffff)
internal val Chartgray50 = Color(0xFFf6f6f6)
internal val Chartgray100 = Color(0xFFf0f0f2)
internal val Chartgray200 = Color(0xFFdedee3)
internal val Chartgray300 = Color(0xFFcacad1)
internal val Chartgray400 = Color(0xFFafafb8)
internal val Chartgray500 = Color(0xFF84848f)
internal val Chartgray600 = Color(0xFF5c5c66)
internal val Chartgray700 = Color(0xFF47474f)
internal val Chartgray750 = Color(0xFF333338)
internal val Chartgray800 = Color(0xFF2b2b30)
internal val Chartgray850 = Color(0xFF26262b)
internal val Chartgray900 = Color(0xFF1b1b1f)
internal val Chartgray950 = Color(0xFF121212)
